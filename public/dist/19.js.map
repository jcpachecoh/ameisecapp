{"version":3,"sources":["webpack:///./src/components/ImageSlider/styles.js","webpack:///./src/components/ImageSlider/index.js","webpack:///./src/components/Dropdown/styles.js","webpack:///./src/components/Dropdown/index.js","webpack:///./src/pages/CatalogoPage/components/Description.js","webpack:///./src/pages/ProductPage/styles.js","webpack:///./src/pages/ProductPage/ProductColors.js","webpack:///./src/pages/ProductPage/index.js"],"names":["StyledImageSlider","styled","div","ImageSlider","images","settings","adaptiveHeight","arrows","dots","infinite","slidesToScroll","slidesToShow","speed","map","item","idx","Image","src","alt","size","key","propTypes","PropTypes","arrayOf","any","StyledDropdown","select","mainColors","black","Dropdown","items","onSelectSize","onChange","value","shape","quantity","number","string","func","Description","StyledProductContainer","StyledProductDescription","StyledSlider","StyledColors","StyledColor","props","selected","colorHexa","ProductColors","colors","onSelectColor","name","color","onClick","data-color","ProductPage","match","createSnackbar","dispatch","useDispatch","id","params","category","productDetails","products","find","useState","priceUnt","price","ref","itemData","setItemData","listBreadrump","active","label","link","handleAddItem","useCallback","payload","type","reduxActions","ADD_ITEM","message","theme","HamburgerMenu","colorBackground","ProductTitle","title","textAlign","description","e","colorValue","target","getAttribute","articleData","Price","showIva","inventory","sizeValue","Button","width","Footer","wrapComponent"],"mappings":"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","file":"19.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledImageSlider = styled.div`\n  margin: 12px 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\n\nimport Image from '../Image';\n\nimport { StyledImageSlider } from './styles';\n\nfunction ImageSlider({ images }) {\n  const settings = {\n    adaptiveHeight: false,\n    arrows: false,\n    dots: true,\n    infinite: true,\n    slidesToScroll: 1,\n    slidesToShow: 1,\n    speed: 500,\n  };\n\n  return (\n    <StyledImageSlider>\n      <Slider {...settings}>\n        {images.map((item, idx) => {\n          return <Image src={item.src} alt={item.idx} size={'100%'} key={idx} />;\n        })}\n      </Slider>\n    </StyledImageSlider>\n  );\n}\n\nImageSlider.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.any),\n};\n\nexport default ImageSlider;\n","import styled from 'styled-components';\n\nimport { mainColors } from '../../constants';\n\nexport const StyledDropdown = styled.select`\n  border: 1px solid ${mainColors.black};\n  margin: 10px 0;\n  text-indent: 5px;\n  max-height: calc(1.2em + 24px);\n  height: calc(1.2em + 24px);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledDropdown } from './styles';\n\nfunction Dropdown({ items, onSelectSize }) {\n  return (\n    <StyledDropdown onChange={onSelectSize}>\n      <option value={'--'}>Seleccione una talla</option>\n      {items.map((item, idx) => {\n        return (\n          <option value={item.size} key={idx}>\n            {item.size}\n          </option>\n        );\n      })}\n    </StyledDropdown>\n  );\n}\n\nDropdown.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      quantity: PropTypes.number,\n      size: PropTypes.string,\n    }),\n  ),\n  onSelectSize: PropTypes.func,\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledDescription } from './styles';\n\nfunction Description({ value }) {\n  return <StyledDescription>{value}</StyledDescription>;\n}\n\nDescription.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Description;\n","import styled from 'styled-components';\n\nexport const StyledProductContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 32px 64px;\n  width: 100%;\n\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n    padding: 32px 16px;\n  }\n`;\n\nexport const StyledProductDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 400px;\n  width: 50%;\n  padding: 30px 10px;\n  @media only screen and (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nexport const StyledSlider = styled.div`\n  padding: 10px;\n  width: 50%;\n  @media only screen and (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nexport const StyledColors = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const StyledColor = styled.div`\n  border: 1px solid #000;\n  height: ${props => (props.selected ? '48px' : '32px')};\n  background-color: ${props => props.colorHexa};\n  width: ${props => (props.selected ? '48px' : '32px')};\n  margin: 0 10px;\n  padding: 2px;\n\n  &:hover {\n    height: 48px;\n    width: 48px;\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledColors, StyledColor } from './styles';\n\nfunction ProductColors({ colors, onSelectColor, selected }) {\n  return (\n    <StyledColors>\n      {colors?.map((item, idx) => {\n        return (\n          <StyledColor\n            key={idx}\n            size={'32px'}\n            name={item.color}\n            colorHexa={item.colorHexa}\n            onClick={onSelectColor}\n            data-color={item.color}\n            selected={selected === item.color}\n          />\n        );\n      })}\n    </StyledColors>\n  );\n}\n\nProductColors.propTypes = {\n  colors: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string,\n      colorHexa: PropTypes.string,\n      quantity: PropTypes.number,\n    }),\n  ),\n  onSelectColor: PropTypes.func,\n  selected: PropTypes.string,\n};\n\nexport default ProductColors;\n","import React, { Fragment, useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { wrapComponent } from 'react-snackbar-alert';\n\nimport { products } from '../../api/products';\nimport Footer from '../../components/Footer';\nimport HamburgerMenu from '../../components/HamburgerMenu';\nimport ImageSlider from '../../components/ImageSlider';\nimport Price from '../CatalogoPage/components/Price';\nimport Dropdown from '../../components/Dropdown';\nimport Button from '../../components/Button';\nimport ProductTitle from '../CatalogoPage/components/ProductTitle';\nimport Description from '../CatalogoPage/components/Description';\nimport Breadcrump from '../../components/BreadCrump';\nimport { reduxActions } from '../../constants';\n\nimport { StyledProductContainer, StyledProductDescription, StyledSlider } from './styles';\nimport ProductColors from './ProductColors';\n\nfunction ProductPage({ match, createSnackbar }) {\n  const dispatch = useDispatch();\n\n  const { id } = match?.params;\n  const { category } = match?.params;\n\n  const productDetails = products.find(item => item.id == id);\n  const [itemData, setItemData] = useState({\n    ...productDetails,\n    color: '',\n    priceUnt: productDetails.price,\n    ref: productDetails.ref,\n    size: '',\n  });\n  const listBreadrump = [\n    {\n      active: true,\n      label: 'Inicio',\n      link: '/',\n    },\n    {\n      active: true,\n      label: category,\n      link: `/${category}`,\n    },\n    {\n      active: false,\n      label: productDetails.name,\n      link: '/',\n    },\n  ];\n\n  const onSelectSize = e => {\n    const sizeValue = e.target.value;\n    const articleData = {\n      ...itemData,\n      quantity: 1,\n      size: sizeValue,\n    };\n    setItemData(articleData);\n  };\n\n  const onSelectColor = e => {\n    const colorValue = e.target.getAttribute('data-color');\n    const articleData = { ...itemData, color: colorValue };\n    setItemData(articleData);\n  };\n\n  const handleAddItem = useCallback(() => {\n    const { color, size } = itemData;\n    if (!color) {\n      createSnackbar({\n        message: 'Por favor, seleccione un color para continuar',\n        theme: 'error',\n      });\n      return;\n    }\n    if (!size) {\n      createSnackbar({\n        message: 'Por favor, seleccione una talla para continuar',\n        theme: 'error',\n      });\n      return;\n    }\n    dispatch({ payload: itemData, type: reduxActions.ADD_ITEM });\n    createSnackbar({\n      message: 'Articulo adicionado exitosamente',\n      theme: 'success',\n    });\n  }, [itemData, dispatch, createSnackbar]);\n\n  return (\n    <Fragment>\n      <HamburgerMenu colorBackground />\n      <Breadcrump listBreadrump={listBreadrump} />\n      <StyledProductContainer>\n        <>\n          <StyledSlider>\n            <ImageSlider images={productDetails.images} />\n          </StyledSlider>\n          <StyledProductDescription>\n            <ProductTitle title={productDetails.name} textAlign={'left'} />\n            {productDetails.description && <Description value={productDetails.description} />}\n            {productDetails.colors && (\n              <>\n                <ProductColors\n                  colors={productDetails.colors}\n                  onSelectColor={onSelectColor}\n                  selected={itemData.color}\n                />\n              </>\n            )}\n            <Price value={productDetails.price} showIva />\n            <Dropdown items={productDetails.inventory} onSelectSize={onSelectSize} />\n            <Button onClick={handleAddItem} value={'Agregar al carrito'} width=\"100%\" />\n          </StyledProductDescription>\n        </>\n      </StyledProductContainer>\n      <Footer />\n    </Fragment>\n  );\n}\n\nProductPage.propTypes = {\n  createSnackbar: PropTypes.any,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      category: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  }),\n};\n\nexport default wrapComponent(ProductPage);\n"],"sourceRoot":""}